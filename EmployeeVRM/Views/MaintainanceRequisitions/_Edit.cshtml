
@model EmployeeVRM.Models.MaintainanceRequisition

<form name="EditForm">
    @Html.AntiForgeryToken()

    <div class="modal-header" style="background-color: #e8b316; padding-left: 20px;">
        <h5 class="modal-title" id="popupModalLabel">Update Rquisition</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div class="modal-body" style="padding-left:110px;">

        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleID, "Vehicle", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.VehicleID, (SelectList)ViewBag.VehicleList, new { @id = "dropdown", @class = "form-control" })

                @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DriverID, "Driver", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.DriverID, (SelectList)ViewBag.VehicleDriver, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Maintainance Issue", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cause, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cause, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Supplier", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Supplierid, (SelectList)ViewBag.Supplier, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Supplierid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartsNeeded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartsNeeded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartsNeeded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PartsCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartsCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartsCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceCosting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceCosting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceCosting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimitedDeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimitedDeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimitedDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>



    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" onclick="Edit(@Model.id)" class="btn btn-warning"> Save</button>
    </div>

</form>

@section Scripts{



}

<script type="text/javascript">
    $(function () {
        $('#EstimitedDeliveryDate').datetimepicker({
            format: "DD-MM-YYYY"
        }).on('dp.change', function (e) {
            $(this).data('DateTimePicker').hide();
        });
    });
</script>